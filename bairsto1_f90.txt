!**********************************************
!*        Solving algebraic equations         *
!*           by Bairstow's Method             *
!* ------------------------------------------ *
!* Ref.: "Mathematiques par l'informatique    *
!*        individuelle - Programmes en basic  *
!*        By H. Lehning and D. Jakubowicz,    *
!*        MASSON Paris, 1982" [BIBLI 06].     *
!*                                            *
!* SAMPLE RUN:                                *
!* (Find real and complex roots of equation:  *
!*  x^6 -127x^5 +215x^4 +28x^3 -39x^2 +20x    *
!*  -15 = 0)                                  *
!*                                            *
!* Input degree of equation: 6                *
!*   A(6) = 1                                 *
!*   A(5) = -127                              *
!*   A(4) = 215                               *
!*   A(3) = 28                                *
!*   A(2) = -39                               *
!*   A(1) = 20                                *
!*   A(0) = -15                               *
!*                                            *
!*             ROOTS                ERROR     *
!*   0.03989619     0.44667179  0.1874776E-10 *
!*   0.03989619    -0.44667179  0.1874776E-10 *
!*   0.52383379     0.00000000  0.1297699E-05 *
!*  -0.64575255     0.00000000  0.3497111E-05 *
!* 125.28210889     0.00000000  0.3889075E-08 *
!*   1.76001412     0.00000000  0.1438089E-05 *
!*                                            *
!* NOTE: if a better precision is desired,    *
!*       you can set e to a smaller value or  *
!*       use Newton's method for a real root. *
!*                                            *
!*                F90 Version By J-P Moreau.  *
!*                    (www.jpmoreau.fr)       *
!**********************************************
!See explanation file Bairstow.txt
!---------------------------------
Program Bairstow

!Labels: 100,200,500,550,1000

real*8   A(0:20),B(0:20),C(0:20),P(0:20)
real*8   a1,b1,d,e,f,p1,q,r,t,u,v,x,y,z
integer  i,j,k,m,n

!Enter polynomial A(i) and copy in P(i)
  print *,' '
  write(*,10,advance='no'); read *, N
  m=n  !save N for error estimation
  do i=0, n
    write(*,20,advance='no') n-i; read *, A(i)
    P(i)=A(i)
  end do
  print *,' '
  print *,'            ROOTS                 ERROR'
!Init section
  p1=0.d0; q=0.d0; k=100; e=1.d-3
!Factoring main loop
100 if (n<=2)  goto 500
  j=0
200 if (j>k)   goto 1000
  j=j+1
!calculate B(i) and C(i)
  B(0)=0.d0; B(1)=0.d0; C(0)=0.d0; C(1)=0.d0
  do i=2, n+2
    B(i)=A(i-2)-p1*B(i-1)-q*B(i-2)
    C(i)=-B(i-1)-p1*C(i-1)-q*C(i-2)
  end do
!calculate dp=a1 and dq=b1
  x=B(n+1); y=B(n+2); z=C(n)
  t=C(n+1); u=C(n+2)
  d=t*t-z*(u+x)
  if (d==0.d0) goto 1000
  a1=(z*y-x*t)/d
  b1=(-x*(q*z+p1*t)-y*t)/d
!New p1 and q
  p1=p1+a1; q=q+b1
  f=(dabs(a1)+dabs(b1))/(dabs(p1)+dabs(q))
  if (f>e) goto 200
!A factor has been found
  call Solve2(p1,q,m,P)
!Update polynomial
  n=n-2
  do i=0, n
    A(i)=B(i+2)
  end do
  goto 100
!Last factor, first or second degree
500 if (n==2) goto 550
  x=-A(1)/A(0); y=0.d0  !first degree
  call Print_results(m,x,y,P)
  print *,' '
  stop
550 p1=A(1)/A(0); q=A(2)/A(0)
  call Solve2(p1,q,m,P)
  print *,' '
  stop
1000 print *,' Process not convergent !'
  print *,' '
  stop

10 format(' Input degree of equation: ')
20 format('   A(',i2,') = ')

END

Subroutine Print_results(m,x,y,P)
!Label: 10
parameter(SMALL=1.d-12)
real*8 x,y,P(0:20)
real*8 a1,r,u,v
!calculate error estimation (optional)
  u=P(0); v=0.d0
  do i=1, m
    r=u*x-v*y; v=u*y+v*x; u=r+P(i)
  end do
  a1=DSQRT(u*u+v*v)
  u=0.d0; v=0.d0
  do i=1, m
    r=u*x-v*y; v=u*y+v*x; u=r+(m-i+1)*P(i-1)
  end do
  if (DABS(a1)<SMALL) then
    a1=0.d0
    goto 10
  end if
  if (u*u+v*v>SMALL) then
    a1=a1/DSQRT(u*u+v*v)
  else
    a1=1.d12
  end if
10 write(*,20)  x, y, a1
  return
20 format(f13.8,'  ',f13.8,'  ',e14.7)
End

!Solve x^2+p1x+q:=0}
Subroutine Solve2(p1,q,m,P)
!Label: 10
real*8 p1,q,P(0:20)
real*8 d,x,y
  d=p1*p1-4.d0*q
  if (d<0.d0) goto 10
  d=DSQRT(d); y=0.d0
  x=(-p1+d)/2.d0; call Print_results(m,x,y,P)
  x=(-p1-d)/2.d0; call Print_results(m,x,y,P)
  return
10 d=DSQRT(-d)/2.d0; x=-p1/2.d0
  y=d;  call Print_results(m,x,y,P)
  y=-d; call Print_results(m,x,y,P)
  return
End

!end of file bairsto1.f90
